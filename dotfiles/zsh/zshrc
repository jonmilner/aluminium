# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Custom folder
ZSH_CUSTOM=$HOME/aluminium/dotfiles/zsh

# Theme
ZSH_THEME=""

# Plugins
plugins=(git zsh-syntax-highlighting)

source $ZSH/oh-my-zsh.sh

# Include z, yo
. ~/aluminium/dotfiles/zsh/z.sh

# Pure https://github.com/sindresorhus/pure
fpath+=$HOME/.zsh/pure

autoload -U promptinit; promptinit
prompt pure

# Defaults
export EDITOR=code

# Aliases
source ~/aluminium/dotfiles/zsh/aliases.zsh

# History
source ~/aluminium/dotfiles/zsh/history.zsh

# Private settings
source $HOME/Dropbox/dotfiles/private.zsh

# nvm
export NVM_DIR="$HOME/.nvm"

if [ -s "$NVM_DIR/nvm.sh" ]; then
  . "$NVM_DIR/nvm.sh"
fi

[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# run "nvm use" automatically if .nvmrc file exists
autoload -U add-zsh-hook
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc

# bin
export PATH="$HOME/bin:$PATH"

# homebrew
export PATH=/opt/homebrew/bin:$PATH

# yarn
export PATH="$HOME/.yarn/bin:$PATH"
